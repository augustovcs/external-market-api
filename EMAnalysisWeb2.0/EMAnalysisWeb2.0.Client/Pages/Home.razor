@using EMAnalysisWeb.DTO
@inject HttpClient Http
@rendermode InteractiveWebAssembly
@page "/"

<PageTitle>Home</PageTitle>

<h1 class="text-center mt-4">External Market Analysis HUB</h1>
<p class="text-center text-muted">See below all stocks available!</p>

@if (ResponseStock == null)
{
    <div class="text-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-3">Loading data...</p>
    </div>
}
else if (!ResponseStock.Any())
{
    <p class="text-center text-muted">No stock data found!</p>
}
else
{
    <div class="container mt-4">
        <div class="row g-4">

            @foreach (var stock in ResponseStock)
            {
                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                    <div class="card stock-card h-100 shadow-sm border-0">
                        <div class="card-body text-center">
                            <h5 class="card-title mb-2">@stock.Name</h5>
                            <p class="card-subtitle text-muted mb-2">(@stock.Symbol)</p>
                            <p class="card-text fw-semibold text-success mb-3">
                                $@stock.Description
                            </p>

                            <div class="d-flex justify-content-center gap-2 mb-3">
                                <div class="score-box bg-light rounded">
                                    <div class="fw-bold fs-5 text-danger">@stock.OverallRisk</div>
                                    <small class="text-muted">Risco</small>
                                </div>
                                <div class="score-box bg-light rounded">
                                    <div class="fw-bold fs-5 text-primary">@stock.OverallRank</div>
                                    <small class="text-muted">Inovação</small>
                                </div>
                            </div>

                            <button class="btn btn-primary btn-sm">Ver mais</button>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
}
    

@code {
    private List<SymbolData>? ResponseStock;

    protected override async Task OnInitializedAsync()
    {
        ResponseStock = await Http.GetFromJsonAsync<List<SymbolData>>("/data-symbols");
    }
}
